// Generated by CoffeeScript 1.6.3
var onmessage, strip_image;

importScripts('base64.js');

strip_image = function(html) {
  var first, regexp;
  regexp = /<img\s*[^>]*\s*src='?([^\s^>]+)'?[^>]*>/;
  regexp.test(html);
  first = RegExp.$1;
  if (first[first.length - 1] === '/') {
    first = first.substr(0, first.length - 2);
  }
  return first.replace('"', "").replace('"', "").replace("'", "").replace("'", "");
};

onmessage = function(evt) {
  var content, entry, item, json, obj, result, _i, _j, _len, _len1, _ref, _ref1;
  json = JSON.parse(evt.data);
  result = {
    site: {},
    items: []
  };
  if (json.channel) {
    result.site.description = json.channel.description.Text;
  } else if (json.description) {
    result.site.description = json.description.Text;
  }
  if (json.channel) {
    result.site.title = json.channel.title.Text;
  } else if (json.title) {
    result.site.title = json.title.Text;
  }
  if (json.channel && json.channel.lastBuildDate) {
    result.site.updated = json.channel.lastBuildDate.Text;
  } else if (json.updated) {
    result.site.updated = json.updated.Text;
  }
  if (json.channel && json.channel.image) {
    result.site.icon = json.channel.image.url.Text;
  }
  if (json.channel) {
    _ref = json.channel.item;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      if (item['content:encoded']) {
        content = item['content:encoded'].Text;
      } else if (item['content']) {
        content = item['content'].Text;
      } else {
        content = item['description'].Text;
      }
      obj = {
        'link': item.link.Text,
        'title': item.title.Text,
        'description': base64.encode(encodeURIComponent(item.description.Text)),
        'author': item.author ? item.author.Text : '',
        'updated': item.pubDate ? item.pubDate.Text : result.site.updated,
        'feed': item.link.Text,
        'read': false,
        'star': false,
        'content': base64.encode(encodeURIComponent(content)),
        'site': json.channel.title.Text
      };
      if (item['media:thumbnail']) {
        obj.image = item['media:thumbnail']['@url'];
      } else if (item['image'] || item['thumbnail']) {
        obj.image = item['image'] || item['thumbnail'];
      } else {
        obj.image = strip_image(content);
      }
      if (!item.author && item['dc:creator']) {
        obj.author = item['dc:creator'].Text;
      } else {
        obj.author = 'U';
      }
      result.items.push(obj);
    }
  } else if (json.entry) {
    _ref1 = json.entry;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      entry = _ref1[_j];
      content = entry['content'].Text;
      obj = {
        'link': entry.link['@href'],
        'title': entry.title.Text,
        'updated': entry.updated.Text,
        'feed': entry.link.Text,
        'read': false,
        'star': false,
        'content': base64.encode(encodeURIComponent(content)),
        'site': json.title.Text,
        'author': entry.author ? entry.author.Text : ''
      };
      obj.image = strip_image(content);
      result.items.push(obj);
    }
  }
  postMessage(JSON.stringify(result));
};
